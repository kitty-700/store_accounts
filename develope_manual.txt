------------저장되는 파일의 특성 (import.c 와 export.c 에서 다루어짐)--------------
우선 계정정보가 저장되는 파일의 모든 문자는 export 때 암호화되고 import 때 복호화된다.
	-> 암복호화는 저장될 각 바이트마다 매크로로 정의된 START_OP ('#')로 XOR 후 NOT 을 하여 처리하는 기초 수준이다.

암호화 이전에,
파일에서 특수한 문자들('#','$','%')은 다음과 같은 의미를 갖는다.

문자 '#' 은	import.c 의 Judge_Operator()의 is_operation_mode 를 결정짓고 
				0~9까지의 숫자와 결합되어 서로 다른 의미를 갖는다.
#0 : 파일 내용을 메모리에 적재하기 시작
#1 [내용]$ 새로운 사이트 이름의 입력이 시작되었음을 알림.
#2 [내용]$ 새로운 아이디임을 알림. 
#3 [내용]$ 새로운 아이디의 패스워드임을 알림. (새로운 아이디가 끝났음을 알림)
#4 [내용]$ : 새로운 업데이트 시각임을 알림. (아이디의 패스워드가 끝났음을 알림)
#5 [내용]$: 새로운 메모 임을 알림. (새로운 업데이트 시각이 끝났음을 알림)
#6 [내용]$ : 새로운 사이트의 입력이 끝났음을 알림.
#7 예약
#8 예약
#9 : 파일 내용을 메모리에 적재하였음을 알림.
 
$ 입력을 끝낸다고 알린다. (#1,#2,#3,#4,#5 에 내용을 입력한 뒤에 반드시 삽입)
% 공백을 넣고 입력을 끝낸다고 알린다 ($의 다른 버전)

위와같은 이유로 #,$,% 는 시스템조작문자로 취급되어 ID와 PW, MM 에 포함되어서는 안 된다.
문제는 이 실행파일만 가지고 있다면 누구든 다른 사람의 계정 정보를 알아낼 수 있다는 것이다.
-----------------------------------------------------------------------------------------------------------------------
------------ 계정 정보가 담긴 파일이 메모리에 DB로 로드된 이후 --------------
메모리에 저장되는 데이터 구조는 다음과 같다.
	DB 는 여러 개의 SA(사이트)들로 이루어져있고	
	SA 는 여러 개의 AE(계정)들로 이루어져있다.
	ADD나 DELETE, UPDATE, SWAP 등으로 DB 내용을 변경할 경우 로그에 남긴다.
------------------------------------------------------------------------------------------------